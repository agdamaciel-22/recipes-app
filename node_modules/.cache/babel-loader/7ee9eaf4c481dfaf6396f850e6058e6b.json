{"ast":null,"code":"var _jsxFileName = \"/home/myrella/\\xC1rea de Trabalho/projetos2/sd-021-b-project-recipes-app/src/components/ShareAndFavorite.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport propTypes from 'prop-types';\nimport whiteHeartIcon from '../images/whiteHeartIcon.svg';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\nimport shareIcon from '../images/shareIcon.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst copy = require('clipboard-copy');\n\nfunction ShareAndFavorite(_ref) {\n  _s();\n\n  let {\n    id,\n    recipe,\n    type,\n    pathname\n  } = _ref;\n  const INITAL_COMPONENT_STATE = {\n    shareMessage: false,\n    recipe,\n    id,\n    favoriteIcon: whiteHeartIcon\n  };\n  const [shareFavoriteState, setShareFavorite] = useState(INITAL_COMPONENT_STATE);\n\n  function isFavorite() {\n    const savedRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n\n    if (savedRecipes.some(recip => recip.id === shareFavoriteState.id)) {\n      setShareFavorite(prevState => ({ ...prevState,\n        favoriteIcon: blackHeartIcon\n      }));\n    }\n  }\n\n  useEffect(() => {\n    function getFavorites() {\n      if (localStorage.getItem('favoriteRecipes')) {\n        isFavorite();\n      }\n    }\n\n    getFavorites();\n  }, []);\n\n  function toggleFavorites(fav) {\n    const savedRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n\n    if (savedRecipes.some(item => item.id === id)) {\n      const newFav = savedRecipes.filter(item => item.id !== id);\n      localStorage.setItem('favoriteRecipes', JSON.stringify(newFav));\n      setShareFavorite(prevState => ({ ...prevState,\n        favoriteIcon: whiteHeartIcon\n      }));\n    } else {\n      const array = [...savedRecipes, ...fav];\n      localStorage.setItem('favoriteRecipes', JSON.stringify(array));\n      setShareFavorite(prevState => ({ ...prevState,\n        favoriteIcon: blackHeartIcon\n      }));\n    }\n  }\n\n  function firstFavorite(favs) {\n    localStorage.setItem('favoriteRecipes', JSON.stringify(favs));\n    setShareFavorite(prevState => ({ ...prevState,\n      favoriteIcon: blackHeartIcon\n    }));\n  }\n\n  function setFavorites(favoriteRecipe) {\n    const favorites = [{\n      id,\n      type: type === 'Meal' ? 'food' : 'drink',\n      nationality: type === 'Meal' ? favoriteRecipe.strArea : '',\n      category: favoriteRecipe.strCategory,\n      alcoholicOrNot: type === 'Meal' ? '' : favoriteRecipe.strAlcoholic,\n      name: favoriteRecipe[`str${type}`],\n      image: favoriteRecipe[`str${type}Thumb`]\n    }];\n\n    if (!localStorage.getItem('favoriteRecipes')) {\n      firstFavorite(favorites);\n    } else {\n      toggleFavorites(favorites);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [shareFavoriteState.shareMessage ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Link copied!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 44\n    }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"image\",\n      onClick: () => {\n        copy(`http://localhost:3000${pathname}`);\n        setShareFavorite(prevState => ({ ...prevState,\n          shareMessage: true\n        }));\n      },\n      src: shareIcon,\n      \"data-testid\": \"share-btn\",\n      alt: \"shareicon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"image\",\n      onClick: () => {\n        setFavorites(recipe);\n      },\n      src: shareFavoriteState.favoriteIcon,\n      \"data-testid\": \"favorite-btn\",\n      alt: \"favoriteicon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ShareAndFavorite, \"c9IFu6BK0h8e9OEBXuMLZYsBxLw=\");\n\n_c = ShareAndFavorite;\nShareAndFavorite.propTypes = {\n  recipe: propTypes.objectOf(propTypes.string).isRequired,\n  type: propTypes.string.isRequired,\n  id: propTypes.string.isRequired,\n  pathname: propTypes.string.isRequired\n};\nexport default ShareAndFavorite;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShareAndFavorite\");","map":{"version":3,"names":["React","useEffect","useState","propTypes","whiteHeartIcon","blackHeartIcon","shareIcon","copy","require","ShareAndFavorite","id","recipe","type","pathname","INITAL_COMPONENT_STATE","shareMessage","favoriteIcon","shareFavoriteState","setShareFavorite","isFavorite","savedRecipes","JSON","parse","localStorage","getItem","some","recip","prevState","getFavorites","toggleFavorites","fav","item","newFav","filter","setItem","stringify","array","firstFavorite","favs","setFavorites","favoriteRecipe","favorites","nationality","strArea","category","strCategory","alcoholicOrNot","strAlcoholic","name","image","objectOf","string","isRequired"],"sources":["/home/myrella/Área de Trabalho/projetos2/sd-021-b-project-recipes-app/src/components/ShareAndFavorite.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport propTypes from 'prop-types';\nimport whiteHeartIcon from '../images/whiteHeartIcon.svg';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\nimport shareIcon from '../images/shareIcon.svg';\n\nconst copy = require('clipboard-copy');\n\nfunction ShareAndFavorite({ id, recipe, type, pathname }) {\n  const INITAL_COMPONENT_STATE = {\n    shareMessage: false,\n    recipe,\n    id,\n    favoriteIcon: whiteHeartIcon,\n  };\n  const [shareFavoriteState, setShareFavorite] = useState(INITAL_COMPONENT_STATE);\n\n  function isFavorite() {\n    const savedRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    if (savedRecipes.some((recip) => recip.id === shareFavoriteState.id)) {\n      setShareFavorite((prevState) => ({\n        ...prevState,\n        favoriteIcon: blackHeartIcon,\n      }));\n    }\n  }\n\n  useEffect(() => {\n    function getFavorites() {\n      if (localStorage.getItem('favoriteRecipes')) {\n        isFavorite();\n      }\n    }\n    getFavorites();\n  }, []);\n\n  function toggleFavorites(fav) {\n    const savedRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    if (savedRecipes.some((item) => item.id === id)) {\n      const newFav = savedRecipes.filter((item) => item.id !== id);\n      localStorage.setItem('favoriteRecipes', JSON.stringify((newFav)));\n      setShareFavorite((prevState) => ({\n        ...prevState,\n        favoriteIcon: whiteHeartIcon,\n      }));\n    } else {\n      const array = [...savedRecipes, ...fav];\n      localStorage.setItem('favoriteRecipes', JSON.stringify((array)));\n      setShareFavorite((prevState) => ({\n        ...prevState,\n        favoriteIcon: blackHeartIcon,\n      }));\n    }\n  }\n\n  function firstFavorite(favs) {\n    localStorage.setItem('favoriteRecipes', JSON.stringify((favs)));\n    setShareFavorite((prevState) => ({\n      ...prevState,\n      favoriteIcon: blackHeartIcon,\n    }));\n  }\n\n  function setFavorites(favoriteRecipe) {\n    const favorites = [{\n      id,\n      type: type === 'Meal' ? 'food' : 'drink',\n      nationality: type === 'Meal' ? favoriteRecipe.strArea : '',\n      category: favoriteRecipe.strCategory,\n      alcoholicOrNot: type === 'Meal' ? '' : favoriteRecipe.strAlcoholic,\n      name: favoriteRecipe[`str${type}`],\n      image: favoriteRecipe[`str${type}Thumb`],\n    }];\n    if (!localStorage.getItem('favoriteRecipes')) {\n      firstFavorite(favorites);\n    } else {\n      toggleFavorites(favorites);\n    }\n  }\n\n  return (\n    <section>\n      {\n        shareFavoriteState.shareMessage ? (<p>Link copied!</p>) : (\n          <input\n            type=\"image\"\n            onClick={ () => {\n              copy(`http://localhost:3000${pathname}`);\n              setShareFavorite((prevState) => ({\n                ...prevState,\n                shareMessage: true,\n              }));\n            } }\n            src={ shareIcon }\n            data-testid=\"share-btn\"\n            alt=\"shareicon\"\n          />\n        )\n      }\n      <input\n        type=\"image\"\n        onClick={ () => { setFavorites(recipe); } }\n        src={ shareFavoriteState.favoriteIcon }\n        data-testid=\"favorite-btn\"\n        alt=\"favoriteicon\"\n      />\n    </section>\n  );\n}\n\nShareAndFavorite.propTypes = {\n  recipe: propTypes.objectOf(propTypes.string).isRequired,\n  type: propTypes.string.isRequired,\n  id: propTypes.string.isRequired,\n  pathname: propTypes.string.isRequired,\n};\n\nexport default ShareAndFavorite;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}